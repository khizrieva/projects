unit chebyshev;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls, Math, Unit2;

type
  TForm1 = class(TForm)
    Compare: TButton;
    Count: TButton;
    Escape: TButton;
    Value_n: TEdit;
    Label1: TLabel;
    Label2: TLabel;
    Value_x: TEdit;
    Methods: TComboBox;
    Label3: TLabel;
    Button1: TButton;
    Memo1: TMemo;
    Memo2: TMemo;
    procedure EscapeClick(Sender: TObject);
    procedure CountClick(Sender: TObject);
    procedure Button1Click(Sender: TObject);
    procedure CompareClick(Sender: TObject);
  private
    { Private declarations }
    function my_polinom3 (n: Integer; x: Double): Double;
    function my_polinom2 (n: Integer; x: Double): Double;
    function my_polinom (n: Integer; x: Double): Double;
    function fact (a: integer): integer;
  public
    { Public declarations }
  end;

var
  Form1: TForm1;

implementation

{$R *.dfm}


procedure TForm1.Button1Click(Sender: TObject);

begin
    form3.show;
end;

procedure TForm1.CompareClick(Sender: TObject);
var
  res_rec: array of double;
  res_yavnaya: array of double;
  res_trig: array of double;
  res: array of double;
  n, i, k: integer;
  x: double;
  text: string;
begin
  n := StrToInt(Value_n.Text);
  x := StrToFloat(Value_x.Text);
    setlength(res_rec, n);
    setlength(res_trig, n);
    setlength(res, n);
    setlength(res_yavnaya, n);
    for i := 1 to n do
      begin
         res_rec[i]:=my_polinom(i,x);
         res_trig[i]:=my_polinom3(i,x);
         res_yavnaya[i]:=my_polinom2(i,x);
      end;

       for k := 0 to n-1 do
     begin
          str(res_rec[k]:6:2, text);
          text:='T['+inttostr(k)+']'+text;
          memo2.lines.add(text);
     end;
end;

procedure TForm1.CountClick(Sender: TObject);
var my_result: double;
    n, i: integer;
    x: double;
    text: string;
begin
  n := StrToInt(Value_n.Text);
  x := StrToFloat(Value_x.Text);

  if Methods.ItemIndex = 0 then
  begin
    for i := 1 to n do
    begin
      text:='T['+inttostr(i-1)+']';
      memo1.lines.add(text+floattostr(my_polinom(i, x)));
    end;

  end;


  if Methods.ItemIndex = 1 then
      my_result := my_polinom2(n, x);

  if Methods.ItemIndex = 2 then
      my_result := my_polinom3(n, x);


end;

function TForm1.fact(a: integer): integer;
begin
   if a = 0 then result := 1
    else if a = 1 then result := 1
    else result := a * fact(a - 1);
end;

procedure TForm1.EscapeClick(Sender: TObject);
begin
  Close;
end;

function TForm1.my_polinom(n: Integer; x: Double): Double;     //  рекурсия
begin
    if n=1 then  result:=1
    else if n=2 then result:=x
         else
              result := ((2*x*my_polinom(n-1, x)) - my_polinom(n-2, x));

end;

function TForm1.my_polinom2(n: Integer; x: Double): Double;    //  явная формула
var k, p: integer;
    final_s: double;
    final: array of double;
    i: Integer;
    text: string;
begin

    setlength(final, n);
    if n>2 then
    begin
      final[0]:=1;
      final[1]:=x;
    for i := 2 to n-1 do

      begin
         for k := 0 to i do
         begin
            if k mod 2 = 0 then  p := 1
            else if k mod 2 = 1 then  p := -1;
            final_s := final_s + ((p*power(2, k)*(fact(i+k-1)/(fact(i-k)*fact(2*k))))*power(1-x, k));
         end;
         final[i] := i*final_s;
          p := 1;
          final_s := 0;
     end;
    end;
    if n=2 then
    begin
      final[0]:=1;
      final[1]:=x;
    end;
    if n=1 then
      final[0]:=1;

    for i := 0 to n-1 do
     begin
          str(final[i]:6:2, text);
          text:='T['+inttostr(i)+']'+text;
          memo1.lines.add(text);
     end;
end;

function TForm1.my_polinom3(n: Integer; x: Double): Double;    // тригонометрия
var final: array of double;
i: integer;
text: string;
begin
    setlength(final, n);
    if n>2 then
    begin
      final[0]:=1;
      final[1]:=x;
    for i := 2 to n-1 do
      begin
         final[i] := cos(i*arccos(x));
     end;
    end;
    if n=2 then
    begin
      final[0]:=1;
      final[1]:=x;
    end;
    if n=1 then
      final[0]:=1;

    memo1.Clear;
    for i := 0 to n-1 do
     begin
          str(final[i]:6:2, text);
          text:='T['+inttostr(i)+']'+text;
          memo1.lines.add(text);
     end;

end;

end.
